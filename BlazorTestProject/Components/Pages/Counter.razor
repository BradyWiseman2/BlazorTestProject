@page "/counter"
@rendermode InteractiveServer
@inherits ClientBase
<PageTitle>Counter</PageTitle>
<style>
    h1.Client {

    }
    div.Player{
    vertical-align: top;
    display: inline-block;
    text-align: center;
    font-size: 1em;		
    width: 24%;	
    height: 20%;
    align-items:center;
    margin-right: auto;
    margin-left: auto;
    min-width:250px;
    }
    .BlockAnim{
        min-block-size:64px;        

    }   
</style>
<h1>Counter</h1>


<p role="status">Total Count: @currentCount</p>
<p role="status">Client Name: @ClientName</p>
<p role="status">Connected Clients: @ClientsConnected</p>

@if(State != MashingGameState.Ended){
<p class="Countdown">@(3-ElapsedSeconds)</p>
}

<div class="form-floating mb-3">
    <InputText type="ClientName" @bind-Value="_ClientName" class="form-control" />    
</div>
<div class="Players">
    @foreach (ClientBase client in Clients)
    {
        <div class="Player">
        <img src="@BlockPath" class="BlockAnim" alt="Block">
        <h1 class="Client">@client.ClientName: @client.ClientCount</h1>
        </div>
    }
</div>


<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
@if(this == GameHost){
    <button class="btn btn-primary" @onclick="StartGame">Start Game</button>
}

@code {

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Update();
        }
        return base.OnAfterRenderAsync(firstRender);
    }
    private void IncrementCount()
    {
        if(State == MashingGameState.Ongoing)
        {
            currentCount++;
            _ClientCount++;
            Update();
        }
        
    }   
   
}